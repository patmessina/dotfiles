
# I liked the way https://github.com/Phantas0s/.dotfiles/tree/master/zsh was
# set up and so a lot is borrowed and modified from that repo
#
#
#

# Navigation

setopt AUTO_CD              # Go to folder path without using cd.

setopt AUTO_PUSHD           # Push the old directory onto the stack on cd.
setopt PUSHD_IGNORE_DUPS    # Do not store duplicates in the stack.
setopt PUSHD_SILENT         # Do not print the directory stack after pushd or popd.

setopt CORRECT              # Spelling correction
setopt CDABLE_VARS          # Change directory to a path stored in a variable.
setopt EXTENDED_GLOB        # Use extended globbing syntax.


# History

setopt EXTENDED_HISTORY          # Write the history file in the ':start:elapsed;command' format.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire a duplicate event first when trimming history.
setopt HIST_IGNORE_DUPS          # Do not record an event that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete an old recorded event if a new event is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a previously found event.
setopt HIST_IGNORE_SPACE         # Do not record an event starting with a space.
setopt HIST_SAVE_NO_DUPS         # Do not write a duplicate event to the history file.
setopt HIST_VERIFY               # Do not execute immediately upon history expansion.

# aliases
source ${DOTFILES}/zsh/aliases.zsh

# scripts
source ${DOTFILES}/zsh/scripts.zsh


# autocompelte
source ${DOTFILES}/zsh/completions.zsh


# OS Specific
case `uname` in
  Darwin)

    # Need homebrew installed commands
    export PATH="$PATH:/usr/local/bin:/opt/homebrew/bin"

    # prompt
    # https://starship.rs/guide/#%F0%9F%9A%80-installation
    eval "$(/opt/homebrew/bin/starship init zsh)"

    # fzf
    if [ $(command -v "fzf") ]; then
        source $DOTFILES/zsh/fzf/darwin-fzf.zsh
    fi
  ;;
  Linux)
    # fzf
    if [ $(command -v "fzf") ]; then
        source $DOTFILES/zsh/fzf/linux-fzf.zsh
    fi
  ;;
  FreeBSD)
    # commands for FreeBSD go here
  ;;
esac


if [[ ${COMP_TYPE} == "WORK" || "${COMP_TYPE}" == "WORK_SERVER" ]]; then
  source ${WORK_DOTFILES}/zsh/work-zshrc.zsh
fi


source $DOTFILES/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
source $DOTFILES/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# --- old ------------
# Autocomplete
# autoload -U compinit; compinit
# source $DOTFILES/zsh/completion.zsh
#
# # theme
#
# # Enable substitution in the prompt.
# setopt prompt_subst
#
#
# source ${HOME}/.git.zsh
# ZSH_THEME_GIT_PROMPT_PREFIX="%{$reset_color%}%{$fg[green]%}"
# ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%} "
# ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[yellow]%}⚡%{$reset_color%}"
# ZSH_THEME_GIT_PROMPT_CLEAN=""
# PROMPT='%{$fg[cyan]%}%1~%{$reset_color%}%{$fg[red]%}|%{$reset_color%}$(git_prompt_info)%{$fg[cyan]%}⇒%{$reset_color%} '
#
# # aliases
#
#
# # GO
# export GOPATH="${HOME}/.go"
#
# source /Users/pmessina/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
#
# # Java
# export JAVA_HOME="/Library/Java/JavaVirtualMachines/openjdk.jdk/Contents/Home"
#
# export PATH=${PATH}:${HOME}/.bin
#
# # source "${ZDOTDIR:-${HOME}}/.zshrc-`uname`"
# case `uname` in
#   Darwin)
#     # commands for OS X go here
#   ;;
#   Linux)
#     # commands for Linux go here
#   ;;
#   FreeBSD)
#     # commands for FreeBSD go here
#   ;;
# esac
#
